"""Create StockData table

Revision ID: f43302b0ae38
Revises: 
Create Date: 2025-01-18 12:00:06.258233

"""

import csv
import os
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f43302b0ae38"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    stock_data_table = op.create_table(
        "stock_data",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("price", sa.Float(), nullable=True),
        sa.Column("ticker", sa.String(length=10), nullable=True),
        sa.Column("daily_pct_change", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_stock_data_id"), "stock_data", ["id"], unique=False)
    # ### end Alembic commands ###
    # ### end Alembic commands ###
    csv_file_path = os.path.join(
        os.path.dirname(__file__), "../bootstrap/snp500prices.csv"
    )

    # Open and read the CSV file
    with open(csv_file_path, "r") as csvfile:
        reader = csv.DictReader(csvfile)
        # Prepare the data for insertion
        rows = [
            {
                "date": row["Date"],
                "price": float(row["price"]),
                "ticker": row["ticker"],
                "daily_pct_change": float(row["daily_pct_change"]),
            }
            for row in reader
        ]

    # Insert the data into the table
    op.bulk_insert(stock_data_table, rows)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_stock_data_id"), table_name="stock_data")
    op.drop_table("stock_data")
    # ### end Alembic commands ###
